//! # DBus interface proxy for: `fi.w1.wpa_supplicant1.Network`
//!
//! This code was generated by `zbus-xmlgen` `3.0.0` from DBus introspection data.
//! Source: `DBusWpaNetwork.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!

use zbus::dbus_proxy;

#[dbus_proxy(interface = "fi.w1.wpa_supplicant1.Network")]
trait Network {
    /// PropertiesChanged signal
    #[dbus_proxy(signal)]
    fn properties_changed(
        &self,
        properties: std::collections::HashMap<&str, zbus::zvariant::Value<'_>>,
    ) -> zbus::Result<()>;

    /// Enabled property
    #[dbus_proxy(property)]
    fn enabled(&self) -> zbus::Result<bool>;
    #[dbus_proxy(property)]
    fn set_enabled(&self, value: bool) -> zbus::Result<()>;

    /// Properties property
    #[dbus_proxy(property)]
    fn properties(
        &self,
    ) -> zbus::Result<std::collections::HashMap<String, zbus::zvariant::OwnedValue>>;
    #[dbus_proxy(property)]
    fn set_properties(
        &self,
        value: std::collections::HashMap<&str, zbus::zvariant::Value<'_>>,
    ) -> zbus::Result<()>;
}
